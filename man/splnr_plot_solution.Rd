% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_plotting.R
\name{splnr_plot_solution}
\alias{splnr_plot_solution}
\title{Plot \code{prioritizr} Solution}
\usage{
splnr_plot_solution(
  soln,
  colorVals = c("#c6dbef", "#3182bd"),
  showLegend = TRUE,
  legendLabels = c("Not selected", "Selected"),
  plotTitle = "Solution",
  legendTitle = "Planning Units",
  zones = FALSE
)
}
\arguments{
\item{soln}{The \code{prioritizr} solution object, expected as an \code{sf} object.}

\item{colorVals}{A character vector of color values. For single-zone
problems, this should typically be two colors (for "Not selected" and
"Selected"). For multi-zone problems, the length should match the number of
zones plus one (for "Not selected").}

\item{showLegend}{A logical value indicating whether to display the legend
of the solution. Defaults to \code{TRUE}.}

\item{legendLabels}{A character vector of strings to label the legend values.
Its length must match the number of levels in the solution (e.g., "Not selected",
"Selected" for single zone; "Not selected", "Zone 1", "Zone 2" for two zones).}

\item{plotTitle}{A character string for the title of the plot. Can be empty (\code{""}).
Defaults to \code{"Solution"}.}

\item{legendTitle}{A character string for the title of the legend. Can be empty (\code{""}).
Defaults to \code{"Planning Units"}.}

\item{zones}{A logical value. Set to \code{TRUE} if the \code{prioritizr} solution
contains multiple zones (i.e., it's a multi-zone problem). Defaults to \code{FALSE}.}
}
\value{
A \code{ggplot} object representing the plot of the conservation solution.
}
\description{
The \code{splnr_plot_solution()} function visualizes the solution of a
\code{prioritizr} conservation problem using \code{ggplot2}. It can handle
single-zone and multi-zone solutions, offering customization for colors
and legend.
}
\details{
This function requires a \code{prioritizr} solution object, which should be an
\code{sf} object containing at least a \code{solution_1} column (for single-zone
problems) or \code{solution_1_zone1}, \code{solution_1_zone2}, etc. (for multi-zone
problems). It outputs a \code{ggplot} object, which can be further customized
by combining it with the \code{spatialplanr} function \code{splnr_gg_add()}.

For multi-zone problems (\code{zones = TRUE}), the function sums the selected
zones for each planning unit and plots the resulting combined selection.
The \code{colorVals} and \code{legendLabels} should be provided to match the number of
selection levels (e.g., "Not selected", "Zone 1", "Zone 2", etc.).
}
\examples{
\dontrun{
# Assuming 'dat_species_bin' is an existing sf object in your package.

# Example 1: Plotting a single-zone prioritizr solution
dat_problem <- prioritizr::problem(
  dat_species_bin \%>\% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),
  features = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5"),
  cost_column = "Cost"
) \%>\%
  prioritizr::add_min_set_objective() \%>\%
  prioritizr::add_relative_targets(0.3) \%>\%
  prioritizr::add_binary_decisions() \%>\%
  prioritizr::add_default_solver(verbose = FALSE)

dat_soln <- dat_problem \%>\%
  prioritizr::solve.ConservationProblem()

plot_soln_single_zone <- splnr_plot_solution(dat_soln)
print(plot_soln_single_zone)

# Example 2: Plotting a multi-zone prioritizr solution
# Create targets for two zones
t2 <- matrix(NA, ncol = 2, nrow = 5)
t2[, 1] <- 0.1
t2[, 2] <- 0.05

# Define zones for species
z2 <- prioritizr::zones(
  "zone 1" = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5"),
  "zone 2" = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5")
)

# Create a multi-zone problem (requires as many cost columns as zones)
p2 <- prioritizr::problem(
  dat_species_bin \%>\% dplyr::mutate(
    Cost1 = runif(n = dim(.)[[1]]),
    Cost2 = runif(n = dim(.)[[1]])
  ),
  z2,
  cost_column = c("Cost1", "Cost2")
) \%>\%
  prioritizr::add_min_set_objective() \%>\%
  prioritizr::add_relative_targets(t2) \%>\%
  prioritizr::add_binary_decisions() \%>\%
  prioritizr::add_default_solver(verbose = FALSE)

s2 <- p2 \%>\%
  prioritizr::solve.ConservationProblem()

plot_soln_multi_zone <- splnr_plot_solution(s2,
  zones = TRUE,
  colorVals = c("#c6dbef", "#3182bd", "black"), # Colors for Not selected, Zone 1, Zone 2
  legendLabels = c("Not selected", "Zone 1", "Zone 2")
)
print(plot_soln_multi_zone)
}
}
