% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-climate.R
\name{splnr_climate_featureApproach}
\alias{splnr_climate_featureApproach}
\title{Run the Feature Climate-Smart Approach}
\usage{
splnr_climate_featureApproach(
  features,
  metric,
  targets,
  direction,
  percentile = 35,
  refugiaTarget = 0.3
)
}
\arguments{
\item{features}{An \code{sf} object representing conservation features (e.g., species
distribution data).}

\item{metric}{An \code{sf} object containing climate metric information. It must
have a column named 'metric' with the climate metric values per planning unit.}

\item{targets}{A \code{data.frame} with two columns: \code{feature} (character, listing
the original feature names) and \code{target} (numeric, the initial conservation
target for each feature as a proportion, e.g., 0.3).}

\item{direction}{An integer specifying the direction of climate-smartness:
\itemize{
\item \code{1}: Higher metric values mean more climate-smart areas.
\item \code{-1}: Lower metric values mean more climate-smart areas.
}}

\item{percentile}{A numeric value (0-100) representing the cutoff threshold for
determining whether an area is a climate priority area or not. This is applied
globally to the \code{metric} data. Defaults to \code{35}.}

\item{refugiaTarget}{A numeric value (0-1) representing the target proportion
assigned to the overall climate-smart layer. Defaults to \code{0.3} (30\%).}
}
\value{
A \code{list} with two components:
\itemize{
\item \code{Features}: An \code{sf} object containing the binary information per
planning unit for each original feature, plus the new \code{climate_layer}
feature. This is ready to be passed to \code{prioritizr}.
\item \code{Targets}: A \code{data.frame} with the adjusted targets for all features,
including the \code{climate_layer}. This is also ready for \code{prioritizr}.
}
}
\description{
\code{splnr_climate_featureApproach()} implements the Feature Approach to
climate-smart conservation planning. This involves defining a global
"climate-smart" layer and adjusting conservation targets to ensure that
a specified proportion of this layer is captured in the solution.
}
\details{
This function orchestrates the steps for the Feature Approach:
\enumerate{
\item \strong{Preprocessing:} It calls \code{splnr_climate_feature_preprocess()} to
identify a region-wide climate-smart layer based on a percentile cutoff
of the climate metric. This layer is then added as a new binary feature
to your conservation data.
\item \strong{Target Assignment:} It then calls \code{splnr_climate_feature_assignTargets()}
to calculate and assign new targets. Crucially, a specific \code{refugiaTarget}
is set for the newly created \code{climate_layer} feature, ensuring that a
certain proportion of the most climate-resilient areas are included in
the final conservation plan.
}

The output is a list containing the modified features (now including the
\code{climate_layer}) and their corresponding adjusted targets, ready to be used
in a \code{prioritizr} conservation problem.
}
\examples{
\dontrun{
# Assuming 'dat_species_bin' and 'dat_clim' are existing sf objects
# in your package.

# Define initial targets for species features.
initial_targets <- dat_species_bin \%>\%
  sf::st_drop_geometry() \%>\%
  colnames() \%>\%
  data.frame() \%>\%
  setNames(c("feature")) \%>\%
  dplyr::mutate(target = 0.3)

# Run the Feature Approach where higher climate metric values mean
# more climate-smart areas.
Feature_Approach_result <- splnr_climate_featureApproach(
  features = dat_species_bin,
  metric = dat_clim,
  targets = initial_targets,
  direction = 1, # Example: higher metric values are more climate-smart
  percentile = 35,
  refugiaTarget = 0.3
)

# Access the processed features and targets:
out_sf_feature <- Feature_Approach_result$Features
targets_feature <- Feature_Approach_result$Targets

print(head(out_sf_feature))
print(head(targets_feature))
}
}
