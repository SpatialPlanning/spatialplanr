% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_featureRep.R
\name{splnr_plot_circBplot}
\alias{splnr_plot_circBplot}
\title{Plot Circular Barplot for Feature Representation}
\usage{
splnr_plot_circBplot(
  df,
  legend_color,
  legend_list,
  indicateTargets = TRUE,
  impTarget = NA,
  repTarget = NA,
  colTarget = "red"
)
}
\arguments{
\item{df}{A \link[base:data.frame]{data.frame} or \link[tibble:tibble]{tibble} that
\strong{must} contain the following columns:
\itemize{
\item \code{feature}: \link[base:character]{character} or \link[base:factor]{factor} unique identifier for each individual bar (e.g., species names).
\item \code{value}: \link[base:numeric]{numeric} the value to be plotted on the y-axis (bar height, typically percentage representation).
\item \code{group}: \link[base:character]{character} or \link[base:factor]{factor} for grouping factors (e.g., "important", "representative").
}}

\item{legend_color}{A \link[base:vector]{named vector} of colors. Names must correspond
to the unique values in the \code{group} column of \code{df}, and values are the
corresponding colors. For example: \code{c("group_name1" = "red", "group_name2" = "blue")}.}

\item{legend_list}{A \link[base:character]{character vector} of labels for the legend.
This should match the names used in \code{legend_color} or the levels of \code{group}.}

\item{indicateTargets}{A \link[base:logical]{logical} value. If \code{TRUE}, horizontal
lines indicating \code{impTarget} and \code{repTarget} will be drawn on the plot.}

\item{impTarget}{A \link[base:numeric]{numeric} value representing the target
percentage for 'important' features. Required if \code{indicateTargets} is \code{TRUE}.}

\item{repTarget}{A \link[base:numeric]{numeric} value representing the target
percentage for 'representative' features. Required if \code{indicateTargets} is \code{TRUE}.}

\item{colTarget}{A \link[base:character]{character} string specifying the color
for the target indicator lines.}
}
\value{
A \link[ggplot2:ggplot]{ggplot2::ggplot} object of the circular bar plot.
}
\description{
\code{splnr_plot_circBplot()} creates a circular bar plot to visualize feature
representation, categorized by groups. It's particularly useful for
displaying how different categories of features meet certain targets in a radial layout.
}
\examples{
# DISCLAIMER: THIS SOLUTION IS NOT ACTUALLY RUN WITH THESE TARGETS YET

\dontrun{

dat_problem <- prioritizr::problem(dat_species_bin \%>\% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),
  features = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5"),
  cost_column = "Cost"
) \%>\%
  prioritizr::add_min_set_objective() \%>\%
  prioritizr::add_relative_targets(0.3) \%>\%
  prioritizr::add_binary_decisions() \%>\%
  prioritizr::add_default_solver(verbose = FALSE)

dat_soln <- dat_problem \%>\%
  prioritizr::solve.ConservationProblem()

s1 <- dat_soln \%>\%
  tibble::as_tibble()

p1 <- dat_problem

# Assuming eval_feature_representation_summary is from prioritizr
df_rep_imp <- prioritizr::eval_feature_representation_summary(
  p1,
  s1[, "solution_1"]
) \%>\%
  dplyr::select(feature, relative_held) \%>\%
  dplyr::mutate(relative_held = relative_held * 100)

imp_layers <- c("Spp1", "Spp3")

target <- data.frame(feature = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5")) \%>\%
  dplyr::mutate(class = dplyr::if_else(.data$feature \%in\% imp_layers,
    "important", "representative"
  )) \%>\%
  dplyr::mutate(target = dplyr::if_else(class == "important",
    50 / 100, 30 / 100
  ))

df <- merge(df_rep_imp, target) \%>\%
  dplyr::select(-target) \%>\%
  stats::na.omit() \%>\% # Use stats::na.omit
  dplyr::rename(value = relative_held) \%>\%
  dplyr::rename(group = class)

colors <- c(
  "important" = "darkgreen",
  "representative" = "darkred"
)
legends <- c("Important", "Representative")

(splnr_plot_circBplot(df,
  legend_list = legends,
  legend_color = colors,
  impTarget = 50, repTarget = 30
))
}
}
